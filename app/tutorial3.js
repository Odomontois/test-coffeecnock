// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  require.config({
    baseUrl: '/lib',
    paths: {
      app: "app"
    }
  });

  require(["jquery", "knockout.debug", "sammy_vm"], function($, ko, SammyVM) {
    var WebMailViewModel;
    WebMailViewModel = (function(_super) {
      __extends(WebMailViewModel, _super);

      function WebMailViewModel() {
        var _ref;
        this.folders = ["Inbox", "Archive", "Sent", "Spam"];
        _ref = this.observables(3), this.chosenFolderId = _ref[0], this.chosenFolderData = _ref[1], this.chosenMailData = _ref[2];
        this.regPatterns({
          '#:folder': this.hashFolder,
          '#:folder/:mailId': this.hashMail,
          '': this.hashDefault
        });
      }

      WebMailViewModel.prototype.goToFolder = function(folder) {
        return location.hash = folder;
      };

      WebMailViewModel.prototype.goToMail = function(mail) {
        return location.hash = "" + mail.folder + "/" + mail.id;
      };

      WebMailViewModel.prototype.hashFolder = function(sammy) {
        var _this = this;
        this.chosenFolderId(sammy.params.folder);
        this.chosenMailData(null);
        return $.ajax({
          url: "/mail/" + sammy.params.folder + ".json",
          success: this.chosenFolderData,
          error: function() {
            return _this.chosenFolderData(null);
          }
        });
      };

      WebMailViewModel.prototype.hashMail = function(sammy) {
        this.chosenFolderId(sammy.params.folder);
        this.chosenFolderData(null);
        return $.ajax({
          url: "/mail/" + sammy.params.mailId + ".json",
          success: this.chosenMailData,
          error: this.chosenMailData(null)
        });
      };

      WebMailViewModel.prototype.hashDefault = function(sammy) {
        return sammy.app.runRoute('get', '#Inbox');
      };

      return WebMailViewModel;

    })(SammyVM);
    return $(function() {
      return ko.applyBindings(new WebMailViewModel());
    });
  });

}).call(this);
