// Generated by CoffeeScript 1.6.3
(function() {
  var ReservationsViewModel, SeatReservation;

  SeatReservation = (function() {
    function SeatReservation(name, initialMeal) {
      var _this = this;
      this.name = name;
      this.meal = ko.observable(initialMeal);
      this.formattedPrice = ko.computed(function() {
        var price;
        price = _this.meal().price;
        if (price) {
          return "$ " + (price.toFixed(2));
        } else {
          return "None";
        }
      });
    }

    return SeatReservation;

  })();

  ReservationsViewModel = (function() {
    function ReservationsViewModel() {
      var _this = this;
      this.availableMeals = [
        {
          mealName: "Standart (sandwich)",
          price: 0
        }, {
          mealName: "Premium (lobster)",
          price: 34.95
        }, {
          mealName: "Ultimate (whole zebra)",
          price: 290
        }
      ];
      this.seats = ko.observableArray([new SeatReservation("Steve", this.availableMeals[0]), new SeatReservation("Bert", this.availableMeals[0])]);
      this.removeSeat = function(seat) {
        console.log(seat);
        return _this.seats.remove(seat);
      };
      this.addSeat = function() {
        return _this.seats.push(new SeatReservation("", _this.availableMeals[0]));
      };
      this.totalSurcharge = ko.computed(function() {
        var seat;
        return ((function() {
          var _i, _len, _ref, _results;
          _ref = this.seats();
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            seat = _ref[_i];
            _results.push(seat.meal().price);
          }
          return _results;
        }).call(_this)).reduce(function(a, b) {
          return a + b;
        });
      });
    }

    return ReservationsViewModel;

  })();

  $(function() {
    return ko.applyBindings(new ReservationsViewModel());
  });

}).call(this);
